noop
addx 3
addx -5
mfaani

At the start of the first cycle, the noop instruction begins execution. During the first cycle, X is 1. After the first cycle, the noop instruction finishes execution, doing nothing.
At the start of the second cycle, the addx 3 instruction begins execution. During the second cycle, X is still 1.
During the third cycle, X is still 1. After the third cycle, the addx 3 instruction finishes execution, setting X to 4.
At the start of the fourth cycle, the addx -5 instruction begins execution. During the fourth cycle, X is still 4.
During the fifth cycle, X is still 4. After the fifth cycle, the addx -5 instruction finishes execution, setting X to -1.


cycle | start | during | after
1   1       1       1
2   1       1       1
3   1       1       4
4   4       4       4
5   4       4       -1

The during is important. Which is always the value equal to 'start'

My code:

cycle | start | during | after
1       1
2       1
3       1
4       4
5       4

You have to increase cycle at beginning.

Problem currently is, I have to store. Then do another cycle.

get total cycles.
reduce cycleCount by 2 after every addX
reduce cycleCount by 1 after every noop

/*
Sprite position: ###.....................................

Start cycle   1: begin executing addx 15
During cycle  1: CRT draws pixel in position 0
Current CRT row: #

During cycle  2: CRT draws pixel in position 1
Current CRT row: ##
End of cycle  2: finish executing addx 15 (Register X is now 16)
Sprite position: ...............###......................

'Register X' and 'Sprite position' are both the same thing. Starts from 0. Then at the end of 2nd cycle the sprite position is moved to the instruction point. The instruction point is the middle of the sprite.
Sprite lenght is 3

The cycle will itself increment just by 1 always.

As long as the cycle is in range of the sprite, then you mark a `#`. Otherwise a `.`

var canvas: String = ""

var spriteRange = 0...2


*/


